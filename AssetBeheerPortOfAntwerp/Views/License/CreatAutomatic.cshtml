@model List<Models.License>

@{
    ViewData["Title"] = "Asset - Create";
    ViewData["PageTitle"] = "Asset";
    ViewData["PageType"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<br />

<h3>@Html.ValidationMessageFor(m => m[0].StatusID)</h3>

<div class="form-row">
    <div class="form-group row col-sm-4">
        <label class="col-sm-2 col-form-label">@Html.DisplayNameFor(model => model[0].Status):</label>
        <div class="col-sm-6">
            <select asp-for="@Model[0].StatusID" class="form-control" asp-items="ViewBag.StatusID" disabled></select>
        </div>
    </div>
    <div class="form-group row col-sm-8">
        <label class="col-sm-2 col-form-label">@Html.DisplayNameFor(model => model[0].PurchaseItem.Product):</label>
        <div class="col-sm-10">
            <select asp-for="@Model[0].PurchaseItemID" class="form-control" asp-items="ViewBag.PurchaseItemID" disabled></select>
        </div>
    </div>

</div>



    @using (Html.BeginForm("CreatAutomatic", "License", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <table class="table-sm col-sm-12">
            <thead>
                <tr>
                    <th hidden>@Html.DisplayNameFor(model => model[0].Status)</th>
                    <th hidden>@Html.DisplayNameFor(model => model[0].PurchaseItem.Product)</th>
                    <th width="50px">@Html.DisplayNameFor(model => model[0].QtyLimited)</th>
                    <th>@Html.DisplayNameFor(model => model[0].LicenseType)</th>
                    <th>@Html.DisplayNameFor(model => model[0].LicenseValidityType)</th>
                    <th>@Html.DisplayNameFor(model => model[0].No)</th>
                    <th>@Html.DisplayNameFor(model => model[0].Key)</th>
                    <th>@Html.DisplayNameFor(model => model[0].ValidityTypeTime)</th>
                    @*<th></th>*@
                </tr>
            </thead>
            <tbody>

                @for (int i = 0; i < Model.Count; i++)
                {
                    <tr>
                        <td hidden>
                            @Html.DropDownListFor(m => m[i].StatusID, ViewBag.StatusID as List<SelectListItem>, "---Select item---", new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(m => m[i].StatusID, "", new { @class = "text-danger" })
                        </td>
                        <td hidden>
                            @Html.DropDownListFor(m => m[i].PurchaseItemID, ViewBag.PurchaseItemID as List<SelectListItem>, "---Select item---", new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(m => m[i].PurchaseItemID, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.TextBoxFor(m => m[i].QtyLimited, new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(m => m[i].QtyLimited, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.DropDownListFor(m => m[i].LicenseTypeID, ViewBag.LicenseTypeID as List<SelectListItem>, "---Select item---", new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m[i].LicenseTypeID, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.DropDownListFor(m => m[i].LicenseValidityTypeID, ViewBag.LicenseValidityTypeID as List<SelectListItem>, "---Select item---", new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m[i].LicenseValidityTypeID, "", new { htmlAttributes = new { @class = "text-danger" } })
                        </td>
                        <td>
                            @Html.TextBoxFor(m => m[i].No, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m[i].No, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.TextBoxFor(m => m[i].Key, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m[i].Key, "", new { htmlAttributes = new { @class = "form-control" } })
                        </td>
                        <td>
                            @Html.TextBoxFor(m => m[i].ValidityTypeTime, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m[i].ValidityTypeTime, "", new { htmlAttributes = new { @class = "text-danger" } })
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <button type="submit" class="btn btn-primary" value="Add">@Localizer["Add"]</button>
    }


    @*
        <div>
            <a asp-action="Index">@Localizer["Back to List"]</a>
        </div>*@

    @section Scripts {
        @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
    }
