@model Models.ProductDetail

@{
    ViewData["Title"] = "Product detail - Details";
    ViewData["PageTitle"] = "Product detail";
    ViewData["PageType"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Detail)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Detail.DetailID)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Definition1)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Definition1)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Definition2)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Definition2)
        </dd>
    </dl>
</div>
<div>
    <a class="btn btn-primary" asp-action="Edit" asp-route-id="@Model.ProductDetailID">@Localizer["Edit"]</a> |

    @*As this view is used by Software and Hardware, when go back needs to go to the correct controller*@
    @if (Model.Product.ProductType.ProductChild.ToString() == "Software")
    {
        <a class="btn btn-outline-info" asp-controller="Software" asp-action="Edit"
        asp-route-id="@Model.ProductID">@Localizer["Back to List"]</a>
    }
    @if (Model.Product.ProductType.ProductChild.ToString() == "Hardware")
    {
        <a class="btn btn-outline-info" asp-controller="Hardware"
        asp-action="Edit" asp-route-id="@Model.ProductID">@Localizer["Back to List"]</a>
    }
</div>
